{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","changeReverse","NONE","type","setType","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","className","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAASH,EAASM,MAA1C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,UAAOR,GAEzB,OAAQM,GACN,KAAKP,EAASU,SACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGE,cAAcD,MAEnB,MAEF,KAAKb,EAASe,OACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAChBD,EAAGI,OAASH,EAAGG,UAarB,OAJIZ,GACFK,EAAaQ,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMX,EAAQR,EAASU,WAChCH,KAAK,SACLW,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYb,IAASP,EAASU,WAJlC,iCAUA,wBACES,QAAS,kBAAMX,EAAQR,EAASe,SAChCR,KAAK,SACLW,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYb,IAASP,EAASe,SAJlC,4BAUA,wBACEI,QAAS,kBAAOd,GAAeD,IAC/BG,KAAK,SACLW,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAahB,IAHvD,sBAQEA,GAAcG,IAASP,EAASM,OAChC,wBACEa,QAAS,WACPd,GAAc,GACdG,EAAQR,EAASM,OAEnBC,KAAK,SACLW,UAAU,4BANZ,sBAYJ,6BACE,6BACGT,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cChGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.def0186d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, changeReverse] = useState(false);\n  const [type, setType] = useState(SortType.NONE);\n\n  const visibleGoods = [...goodsFromServer];\n\n  switch (type) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((g1, g2) => (\n        g1.localeCompare(g2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => (\n        g1.length - g2.length\n      ));\n\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setType(SortType.ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info', { // Якщо цей код буде перевіряти Назар, сподіваюсь буде 0/3 сумних Назарів і після апрува буде мотивація жити це життя\n            'is-light': type !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setType(SortType.LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': type !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => (changeReverse(!isReversed))}\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || type !== SortType.NONE) && (\n          <button\n            onClick={() => {\n              changeReverse(false);\n              setType(SortType.NONE);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}